---
export const prerender = false;

import BaseLayout from '../layouts/BaseLayout.astro';
import TwoColumnLayout from '../layouts/TwoColumnLayout.astro';
import ErrorPanel from '../components/ErrorPanel.astro';
import {
  getProductById,
  productIdInputName,
  productPriceInputName,
  productTitleInputName,
  productTitleMaxLength,
  productTitleMinLength,
  validateNewProductInput
} from '../data/products';
import type { Product, ProductError } from '../models/product';
import NewProductForm from '../components/NewProductForm';

let productTitle;
let productPrice;

let product: Product | undefined;
let successMessage;
let formErrors: ProductError | undefined;

if (Astro.request.method === 'GET') {
  const productId = Number(Astro.url.searchParams.get(productIdInputName));

  product = getProductById(productId);
} else if (Astro.request.method === 'POST') {
  try {
    const data = await Astro.request.formData();
    productTitle = data.get(productTitleInputName) as string;
    productPrice = data.get(productPriceInputName) as string;

    formErrors = validateNewProductInput(productTitle, productPrice);

    const hasFormErrors =
      formErrors[productTitleInputName] || formErrors[productPriceInputName];

    if (!hasFormErrors) {
      // Add product
      successMessage = `${productTitle} added succcessfully`;
      productTitle = '';
      productPrice = '';
    }
  } catch (error) {
    // TypeError: Request.formData: Could not parse content as FormData.
    console.log(error);
  }
}
---

<BaseLayout>
  <h1>Forms</h1>
  <ErrorPanel
    messages={[
      formErrors?.[productTitleInputName],
      formErrors?.[productPriceInputName]
    ]}
  />
  {
    product && (
      <div class="panel">
        <h2>Product ID: {product.id}</h2>
        <h3>{product.title}</h3>
        <p>Price: {product.price}</p>
      </div>
    )
  }
  <TwoColumnLayout>
    <div slot="left-column">
      <h2>Form: GET</h2>
      <form>
        <label>
          Product ID
          <input type="number" name={productIdInputName} />
        </label>
        <button type="submit">Submit</button>
      </form>
    </div>
    <div slot="right-column">
      <h2>Form: POST</h2>
      <h3>Add a Product</h3>
      <form method="post">
        <label>
          Title
          <input
            type="text"
            name={productTitleInputName}
            value={productTitle}
            minlength={productTitleMinLength}
            maxlength={productTitleMaxLength}
            required
            class:list={[
              { 'input-error': !!formErrors?.[productTitleInputName] }
            ]}
          />
        </label>
        <label>
          Price
          <input
            type="number"
            name={productPriceInputName}
            value={productPrice}
            min="1"
            required
            class:list={[
              { 'input-error': !!formErrors?.[productPriceInputName] }
            ]}
          />
        </label>
        <button type="submit">Submit</button>
      </form>
      {
        successMessage && (
          <div class="success-panel" style={{ marginTop: '1rem' }}>
            {successMessage}
          </div>
        )
      }
      <h2 style={{ marginTop: '2rem' }}>Form: POST to API endpoint</h2>
      <h3>Add a Product</h3>
      <NewProductForm client:load />
    </div>
  </TwoColumnLayout>
</BaseLayout>
